# Generated by Django 5.2 on 2025-05-07 12:22

import django.core.validators
import django.db.models.deletion
import services.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("services", "0008_alter_diagnosticresult_attachments_and_more"),
        ("users", "0008_alter_department_description_alter_department_name_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="appointment",
            options={
                "ordering": ["-date", "appointment_date", "appointment_time", "payment_status"],
                "verbose_name": "Запись на прием",
                "verbose_name_plural": "Записи на прием",
            },
        ),
        migrations.AddField(
            model_name="appointment",
            name="payment_status",
            field=models.BooleanField(default=False, help_text="Статус оплаты приема", verbose_name="Статус оплаты"),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="appointment_date",
            field=models.DateField(help_text="Дата планируемого приема", verbose_name="Дата приема"),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="appointment_time",
            field=models.TimeField(help_text="Время начала приема", verbose_name="Время приема"),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="cost",
            field=models.DecimalField(
                decimal_places=2,
                default=0,
                editable=False,
                help_text="Итоговая стоимость услуги с учетом категории врача",
                max_digits=10,
                verbose_name="Стоимость",
            ),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="date",
            field=models.DateTimeField(
                auto_now_add=True, help_text="Дата создания записи", verbose_name="Дата создания"
            ),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="doctor",
            field=models.ForeignKey(
                help_text="Врач, к которому осуществляется запись",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="appointments",
                to="users.doctor",
                verbose_name="Врач",
            ),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="notes",
            field=models.TextField(blank=True, help_text="Дополнительные заметки к записи", verbose_name="Примечания"),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="patient",
            field=models.ForeignKey(
                help_text="Пациент, записанный на прием",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="appointments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пациент",
            ),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="service",
            field=models.ForeignKey(
                help_text="Выбранная медицинская услуга",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="appointments",
                to="services.service",
                verbose_name="Услуга",
            ),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="slot",
            field=models.OneToOneField(
                editable=False,
                help_text="Временной слот записи",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="appointment",
                to="services.slot",
                verbose_name="Слот",
            ),
        ),
        migrations.AlterField(
            model_name="appointment",
            name="status",
            field=models.CharField(
                choices=[("scheduled", "Запланирован"), ("completed", "Завершен"), ("cancelled", "Отменен")],
                default="scheduled",
                help_text="Текущий статус записи",
                max_length=20,
                verbose_name="Статус",
            ),
        ),
        migrations.AlterField(
            model_name="categorycoefficient",
            name="category",
            field=models.CharField(
                choices=[
                    ("none", "Нет категории"),
                    ("second", "Вторая категория"),
                    ("first", "Первая категория"),
                    ("highest", "Высшая категория"),
                ],
                default="none",
                help_text="Категория врача",
                max_length=20,
                unique=True,
                verbose_name="Категория",
            ),
        ),
        migrations.AlterField(
            model_name="categorycoefficient",
            name="coefficient",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Коэффициент стоимости услуг для данной категории",
                max_digits=3,
                verbose_name="Коэффициент",
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="appointment",
            field=models.OneToOneField(
                help_text="Связанная запись на прием",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="diagnostic_result",
                to="services.appointment",
                verbose_name="Запись на прием",
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="attachments",
            field=models.FileField(
                blank=True,
                help_text="Результаты анализов, снимки и другие файлы (PDF, JPG, PNG)",
                null=True,
                upload_to=services.models.get_upload_path,
                validators=[
                    django.core.validators.FileExtensionValidator(allowed_extensions=["pdf", "jpg", "jpeg", "png"])
                ],
                verbose_name="Прикрепленные файлы",
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="Дата создания записи", verbose_name="Дата создания"
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="diagnosis",
            field=models.TextField(blank=True, help_text="Поставленный диагноз", null=True, verbose_name="Диагноз"),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="doctor",
            field=models.ForeignKey(
                help_text="Врач, проводивший диагностику",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="diagnostic_results",
                to="users.doctor",
                verbose_name="Врач",
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="medications",
            field=models.TextField(
                blank=True, help_text="Список назначенных лекарств", null=True, verbose_name="Назначенные лекарства"
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="patient",
            field=models.ForeignKey(
                help_text="Пациент, прошедший диагностику",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="diagnostic_results",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пациент",
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="recommendations",
            field=models.TextField(
                blank=True, help_text="Рекомендации по лечению", null=True, verbose_name="Рекомендации"
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="status",
            field=models.CharField(
                choices=[("pending", "Ожидает заполнения"), ("completed", "Заполнено")],
                default="pending",
                help_text="Текущий статус диагностического результата",
                max_length=20,
                verbose_name="Статус",
            ),
        ),
        migrations.AlterField(
            model_name="diagnosticresult",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True, help_text="Дата последнего обновления", verbose_name="Дата обновления"
            ),
        ),
        migrations.AlterField(
            model_name="schedule",
            name="date",
            field=models.DateField(help_text="Дата рабочего дня", verbose_name="Дата"),
        ),
        migrations.AlterField(
            model_name="schedule",
            name="doctor",
            field=models.ForeignKey(
                help_text="Врач, для которого составляется расписание",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="schedules",
                to="users.doctor",
                verbose_name="Врач",
            ),
        ),
        migrations.AlterField(
            model_name="schedule",
            name="working_shift",
            field=models.IntegerField(
                choices=[(1, "1 Смена"), (2, "2 Смена")],
                help_text="Номер рабочей смены (1 или 2)",
                verbose_name="Рабочая смена",
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="department",
            field=models.ForeignKey(
                help_text="Отделение, к которому относится услуга",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="services",
                to="users.department",
                verbose_name="Отделение",
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="description",
            field=models.TextField(blank=True, help_text="Подробное описание услуги", verbose_name="Описание"),
        ),
        migrations.AlterField(
            model_name="service",
            name="doctors",
            field=models.ManyToManyField(
                blank=True,
                help_text="Врачи, оказывающие данную услугу",
                related_name="services",
                to="users.doctor",
                verbose_name="Врачи",
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="duration",
            field=models.DurationField(
                help_text="Продолжительность оказания услуги (должна быть кратна 30 минутам), заносится в секундах",
                verbose_name="Длительность",
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Доступность услуги для записи", verbose_name="Активность"
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="name",
            field=models.CharField(
                help_text="Наименование медицинской услуги", max_length=200, verbose_name="Название услуги"
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="number_of_slots",
            field=models.IntegerField(
                editable=False,
                help_text="Количество временных слотов, необходимых для услуги",
                verbose_name="Количество слотов",
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="price",
            field=models.DecimalField(
                decimal_places=2, help_text="Базовая стоимость услуги", max_digits=10, verbose_name="Стоимость"
            ),
        ),
        migrations.AlterField(
            model_name="slot",
            name="date",
            field=models.DateField(help_text="Дата слота", verbose_name="Дата"),
        ),
        migrations.AlterField(
            model_name="slot",
            name="number",
            field=models.IntegerField(
                choices=[
                    (1, "07:00"),
                    (2, "07:30"),
                    (3, "08:00"),
                    (4, "08:30"),
                    (5, "09:00"),
                    (6, "09:30"),
                    (7, "10:00"),
                    (8, "10:30"),
                    (9, "11:00"),
                    (10, "11:30"),
                    (11, "12:00"),
                    (12, "12:30"),
                    (13, "13:00"),
                    (14, "13:30"),
                    (15, "14:00"),
                    (16, "14:30"),
                    (17, "15:00"),
                    (18, "15:30"),
                    (19, "16:00"),
                    (20, "16:30"),
                    (21, "17:00"),
                    (22, "17:30"),
                    (23, "18:00"),
                    (24, "18:30"),
                ],
                help_text="Порядковый номер временного слота",
                verbose_name="Слот",
            ),
        ),
        migrations.AlterField(
            model_name="slot",
            name="previous_slot",
            field=models.OneToOneField(
                blank=True,
                default=None,
                editable=False,
                help_text="Предыдущий временной слот",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="next_slot",
                to="services.slot",
            ),
        ),
        migrations.AlterField(
            model_name="slot",
            name="schedule",
            field=models.ForeignKey(
                help_text="Расписание, к которому относится слот",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="slots",
                to="services.schedule",
                verbose_name="Расписание",
            ),
        ),
        migrations.AlterField(
            model_name="slot",
            name="status",
            field=models.CharField(
                choices=[("start", "start"), ("busy", "busy"), ("free", "free")],
                help_text="Текущий статус слота (свободен/занят/начало приема)",
                verbose_name="Статус слота",
            ),
        ),
    ]
