name: Django CI/CD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8
        run: flake8 --max-line-length=119 --ignore=E203,W503 --exclude=.git,__pycache__,venv,.venv,migrations services/ users/ config/

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Check out code
      uses: actions/checkout@v4.2.2

    - name: Create .env file
      run: |
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
        echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "DATABASE_HOST=postgres" >> .env
        echo "DATABASE_PORT=5432" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo "DEBUG=${{ secrets.DEBUG }}" >> .env

    - name: Login to Docker Hub
      uses: docker/login-action@v3.4.0
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.10.0

    - name: Build Docker Compose image
      run: |
        docker compose build

    - name: Push Docker Compose image
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/web:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4.2.2

    - name: Add known hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~/django/medical_diagnostics/
          git pull
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/web:latest
          docker compose down || true
          docker system prune -f
          docker compose up -d
