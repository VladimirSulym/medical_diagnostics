services:
  web:
    image: vormagic/web:latest
    build: .
    restart: unless-stopped
    command: >
      bash -c "python manage.py collectstatic  --noinput && 
      python manage.py migrate && 
      python manage.py csu && 
      gunicorn config.wsgi:application --bind 0.0.0.0:8000 --timeout 120 --workers 3 --max-requests 1000"
#      chmod -R 755 /hw_modul_8/staticfiles &&
#      chmod -R 755 /hw_modul_8/media &&
    volumes:
      - .:/habit_tracker
      - static_volume:/habit_tracker/staticfiles
      - media_volume:/habit_tracker/media
    expose:
      - "8000"
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_HOST=db
      - DJANGO_SETTINGS_MODULE=config.settings
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: docker.io/library/postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - redis

  redis:
    image: docker.io/library/redis:latest
    volumes:
      - redis_data:/data
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    image: vormagic/celery:latest
    build: .
    volumes:
      - .:/habit_tracker
      - media_volume:/habit_tracker/media
    command: celery -A config worker --loglevel=info
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_HOST=db
    depends_on:
      - redis
      - db
      - web

  celery-beat:
    image: vormagic/celery-beat:latest
    build: .
    command: celery -A config worker --beat --scheduler django --loglevel=info
#    command: celery -A config beat â€”loglevel=info
    volumes:
      - .:/habit_tracker
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_HOST=db
    depends_on:
      - celery

  nginx:
    image: docker.io/library/nginx:stable-alpine
    restart: unless-stopped
    volumes:
      - static_volume:/habit_tracker/staticfiles
      - media_volume:/habit_tracker/media
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
#    command: nginx -g 'daemon off;'
    depends_on:
      - celery-beat

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
